//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PublicTransport.Client.Services.Zones {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.Zones.IZoneService")]
    public interface IZoneService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZoneService/CreateZone", ReplyAction="http://tempuri.org/IZoneService/CreateZoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PublicTransport.Services.Exceptions.ValidationFault), Action="http://tempuri.org/IZoneService/CreateZoneValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.datacontract.org/2004/07/PublicTransport.Services.Exceptions")]
        PublicTransport.Services.DataTransfer.ZoneDto CreateZone(PublicTransport.Services.DataTransfer.ZoneDto zone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZoneService/CreateZone", ReplyAction="http://tempuri.org/IZoneService/CreateZoneResponse")]
        System.Threading.Tasks.Task<PublicTransport.Services.DataTransfer.ZoneDto> CreateZoneAsync(PublicTransport.Services.DataTransfer.ZoneDto zone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZoneService/UpdateZone", ReplyAction="http://tempuri.org/IZoneService/UpdateZoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PublicTransport.Services.Exceptions.ValidationFault), Action="http://tempuri.org/IZoneService/UpdateZoneValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.datacontract.org/2004/07/PublicTransport.Services.Exceptions")]
        PublicTransport.Services.DataTransfer.ZoneDto UpdateZone(PublicTransport.Services.DataTransfer.ZoneDto zone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZoneService/UpdateZone", ReplyAction="http://tempuri.org/IZoneService/UpdateZoneResponse")]
        System.Threading.Tasks.Task<PublicTransport.Services.DataTransfer.ZoneDto> UpdateZoneAsync(PublicTransport.Services.DataTransfer.ZoneDto zone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZoneService/DeleteZone", ReplyAction="http://tempuri.org/IZoneService/DeleteZoneResponse")]
        void DeleteZone(PublicTransport.Services.DataTransfer.ZoneDto zone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZoneService/DeleteZone", ReplyAction="http://tempuri.org/IZoneService/DeleteZoneResponse")]
        System.Threading.Tasks.Task DeleteZoneAsync(PublicTransport.Services.DataTransfer.ZoneDto zone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZoneService/FilterZones", ReplyAction="http://tempuri.org/IZoneService/FilterZonesResponse")]
        PublicTransport.Services.DataTransfer.ZoneDto[] FilterZones(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZoneService/FilterZones", ReplyAction="http://tempuri.org/IZoneService/FilterZonesResponse")]
        System.Threading.Tasks.Task<PublicTransport.Services.DataTransfer.ZoneDto[]> FilterZonesAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IZoneServiceChannel : PublicTransport.Client.Services.Zones.IZoneService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZoneServiceClient : System.ServiceModel.ClientBase<PublicTransport.Client.Services.Zones.IZoneService>, PublicTransport.Client.Services.Zones.IZoneService {
        
        public ZoneServiceClient() {
        }
        
        public ZoneServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZoneServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZoneServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZoneServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PublicTransport.Services.DataTransfer.ZoneDto CreateZone(PublicTransport.Services.DataTransfer.ZoneDto zone) {
            return base.Channel.CreateZone(zone);
        }
        
        public System.Threading.Tasks.Task<PublicTransport.Services.DataTransfer.ZoneDto> CreateZoneAsync(PublicTransport.Services.DataTransfer.ZoneDto zone) {
            return base.Channel.CreateZoneAsync(zone);
        }
        
        public PublicTransport.Services.DataTransfer.ZoneDto UpdateZone(PublicTransport.Services.DataTransfer.ZoneDto zone) {
            return base.Channel.UpdateZone(zone);
        }
        
        public System.Threading.Tasks.Task<PublicTransport.Services.DataTransfer.ZoneDto> UpdateZoneAsync(PublicTransport.Services.DataTransfer.ZoneDto zone) {
            return base.Channel.UpdateZoneAsync(zone);
        }
        
        public void DeleteZone(PublicTransport.Services.DataTransfer.ZoneDto zone) {
            base.Channel.DeleteZone(zone);
        }
        
        public System.Threading.Tasks.Task DeleteZoneAsync(PublicTransport.Services.DataTransfer.ZoneDto zone) {
            return base.Channel.DeleteZoneAsync(zone);
        }
        
        public PublicTransport.Services.DataTransfer.ZoneDto[] FilterZones(string name) {
            return base.Channel.FilterZones(name);
        }
        
        public System.Threading.Tasks.Task<PublicTransport.Services.DataTransfer.ZoneDto[]> FilterZonesAsync(string name) {
            return base.Channel.FilterZonesAsync(name);
        }
    }
}
